# kubeadm init and kubeconfig creation

- when: inventory_hostname == groups['kubenodes'][0]
  block:
  - stat:
      path: /etc/kubernetes/admin.conf
    register: kube_config
  - when: "not kube_config.stat.exists"
    block:
    - copy:
        dest: "/tmp/kubeadm-clusterconfiguration.yaml"
        content: |
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: ClusterConfiguration
          controlPlaneEndpoint: "{{ lookup('env', 'CONTROL_PLANE_ENDPOINT') }}"
          #apiServer:
          #  extraArgs:
          #    enable-admission-plugins: DefaultIngressClass,DefaultStorageClass
    - shell: "kubeadm init --config /tmp/kubeadm-clusterconfiguration.yaml --ignore-preflight-errors=NumCPU"
    - shell: "kubeadm token create --print-join-command"
      register: kubeadm_token_create_command



- when: inventory_hostname != groups['kubenodes'][0]
  block:
  - debug:
      var: kubeadm_token_create_command
  - debug:
      var: kubeadm_token_create_command.stdout_lines
  - shell: "{{ kubeadm_token_create_command.stdout_lines }}" # kubeadm join ...
  



- when: inventory_hostname == groups['kubenodes'][0]
  shell: "kubectl taint nodes --all node-role.kubernetes.io/master-" # enable workloads on master nodes
  ignore_errors: yes
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
